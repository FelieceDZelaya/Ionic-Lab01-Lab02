{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/environments/environment.ts","../../src/pages/about/about.ts","../../src/pages/contact/contact.ts","../../src/pages/home/home.ts","../../src/pages/tabs/tabs.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/httpinterceptor/httpinterceptor.ts","../../src/providers/atmservice/atmservice.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 112;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 112\n// module chunks = 4","var map = {\n\t\"../pages/deposit/deposit.module\": [\n\t\t281,\n\t\t3\n\t],\n\t\"../pages/login/login.module\": [\n\t\t282,\n\t\t2\n\t],\n\t\"../pages/transaction-details/transaction-details.module\": [\n\t\t283,\n\t\t1\n\t],\n\t\"../pages/withdrawal/withdrawal.module\": [\n\t\t284,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 154;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 154\n// module chunks = 4","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n      production: false,\n      urlEndPoint : \"http://localhost:3000/atm\",\n      title : \"Atm Project\",\n      apiKey: \"heregoesastrongpasswordfortheApiKey\" \n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { AtmserviceProvider } from '../../providers/atmservice/atmservice';\nimport { AtmTransaction } from '../../models/atm.interface';\n\n@Component({\n  selector: 'page-about',\n  templateUrl: 'about.html'\n})\nexport class AboutPage {\n\n  transactions : Array<AtmTransaction> = [];\n\n  constructor(public navCtrl: NavController,\n              public atmService: AtmserviceProvider) {\n\n  }\n\n  ionViewWillEnter() {\n    this.atmService.getLastOperations(this.atmService.getAccountNumber()).subscribe( data => {\n      this.transactions = data.transactions;\n    });\n  }\n\n  goToDetails(item:AtmTransaction) {\n    this.navCtrl.push(\"TransactionDetailsPage\",{item : item});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/about/about.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { AtmserviceProvider } from '../../providers/atmservice/atmservice';\n\n@Component({\n  selector: 'page-contact',\n  templateUrl: 'contact.html'\n})\nexport class ContactPage {\n\n  constructor(public navCtrl: NavController,\n              public atmService: AtmserviceProvider) {\n\n    this.atmService.logOff();\n    this.navCtrl.setRoot(\"LoginPage\");\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contact/contact.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { AtmserviceProvider } from '../../providers/atmservice/atmservice';\nimport { AtmTransaction } from '../../models/atm.interface';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  currentBalance : number = 0;\n  transactions : Array<AtmTransaction> = [];\n\n  constructor(public navCtrl: NavController,\n              public atmService: AtmserviceProvider) { }\n\n  ionViewCanEnter() {\n    return this.atmService.accountValid;\n  }\n\n  ionViewWillEnter() { \n    this.atmService.getCurrentBalance(this.atmService.accountNumber).subscribe(resp => {\n      this.currentBalance = resp.currentBalance;\n      this.atmService.accountName = resp.accountName;\n    });\n  }\n\n  getAccountName() : string{\n    return this.atmService.accountName; \n  }\n\n  getAccountBalance() {\n    return this.atmService.getCurrentBalance(this.atmService.accountNumber);\n  }\n\n  goToWithdrawal() {\n    this.navCtrl.push(\"WithdrawalPage\",{acc : this.atmService.accountNumber});\n  }\n\n  goToDeposit() {\n    this.navCtrl.push(\"DepositPage\",{acc : this.atmService.accountNumber});\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Component } from '@angular/core';\n\nimport { AboutPage } from '../about/about';\nimport { ContactPage } from '../contact/contact';\nimport { HomePage } from '../home/home';\n\n@Component({\n  templateUrl: 'tabs.html'\n})\nexport class TabsPage {\n\n  tab1Root = HomePage;\n  tab2Root = AboutPage;\n  tab3Root = ContactPage;\n\n  constructor() {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, ErrorHandler } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\n\nimport { AboutPage } from '../pages/about/about';\nimport { ContactPage } from '../pages/contact/contact';\nimport { HomePage } from '../pages/home/home';\nimport { TabsPage } from '../pages/tabs/tabs';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { AtmserviceProvider } from '../providers/atmservice/atmservice';\nimport { HttpinterceptorProvider } from '../providers/httpinterceptor/httpinterceptor';\nimport { HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    AboutPage,\n    ContactPage,\n    HomePage,\n    TabsPage\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [ //This tells the app to load these components\n    MyApp,\n    AboutPage,\n    ContactPage,\n    HomePage,\n    TabsPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    AtmserviceProvider,\n    {\n        provide: HTTP_INTERCEPTORS,\n        useClass: HttpinterceptorProvider,\n        multi: true\n    } ,\n    HttpinterceptorProvider\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\n//import { TabsPage } from '../pages/tabs/tabs';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp { \n  rootPage:any = \"LoginPage\";\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { HttpClient, HttpInterceptor,HttpRequest,HttpHandler ,HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { environment } from '../../environments/environment'; \nimport { AtmserviceProvider } from '../../providers/atmservice/atmservice';\n\n@Injectable()\nexport class HttpinterceptorProvider {\n\n  constructor(public http: HttpClient, \n              public atmService: AtmserviceProvider) {\n    console.log('Hello HttpinterceptorProvider Provider');\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    \n    let token = this.atmService.getToken();\n    \n    const authReq = req.clone({\n      headers : req.headers.set('bbank-apiKey',environment.apiKey)\n                           .set('bbank-secure',token)\n    });\n\n    // send cloned request with header to the next handler.\n    return next.handle(authReq);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/httpinterceptor/httpinterceptor.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/observable';\nimport { Subject }    from 'rxjs/Subject';\nimport { environment } from '../../environments/environment';\nimport { AtmResponse ,AtmResponseOperationBalance ,AtmResponseOperation,AtmResponseTransactions } from '../../models/atm.interface';\n\n@Injectable()\nexport class AtmserviceProvider {\n   \n  public onUpdatedTransactions$ = new Subject<void>();\n  public onUpdateAccountNumber$ = new Subject<void>();\n\n  private END_POINT = environment.urlEndPoint;\n  \n  public accountNumber : string;\n  public accountName   : string;\n  public currentBalance : number;\n  private token          : string;\n  public  accountValid   : boolean;\n\n  constructor( public http: HttpClient) {\n      this.accountValid = undefined;\n  }\n\n  getToken():string { return this.token !== undefined ? this.token : '' ; }\n\n  setAccountNumber(acct:string, pin:string) : Promise<boolean>{\n\n    return new Promise ((succ,reject) => {\n      this.accountExists(acct,pin).then( resp => {\n          if (resp.status === 0 ){\n                this.accountNumber = acct;\n                this.accountValid = true;\n                this.token = resp.token;\n                this.onUpdateAccountNumber$.next();\n                succ(true);\n          }else {\n              this.accountValid = false;\n              reject(false);\n          }\n      });\n    });\n    \n  }\n\n  getAccountNumber(){\n      return this.accountNumber;\n  }\n\n\n  isAlive () : Observable<AtmResponse> {\n    return  this.http.get<AtmResponse>(this.END_POINT);\n  }\n\n  accountExists(acct : string, pin:string ) : Promise<AtmResponse>{\n\n    return new Promise ( (success,reject) => {\n\n        let FINDACCOUNT  = '/find/' + acct+'/pin/'+pin;\n        this.http.get<AtmResponse>(this.END_POINT + FINDACCOUNT )\n          .subscribe (\n              resp => { success(resp); },\n              err  => { reject(err); }\n          );\n      });\n    }\n\n  getCurrentBalance(acct : string) : Observable<AtmResponseOperationBalance> {\n      let BALANCE = `/${acct}`;\n      return this.http.get<AtmResponseOperationBalance>(this.END_POINT + BALANCE );\n  }\n\n  withDraw(acct : string, amount:number) : Promise<AtmResponseOperation> {\n      \n      let WITHDRAW = `/withdraw/${acct}/amount/${amount}`;\n      \n      return new Promise ( (success,reject) => {\n                this.http.get<AtmResponseOperation>(this.END_POINT + WITHDRAW ).subscribe (\n                      resp => { success(resp) },\n                      err =>  { reject(err) },\n                      () =>   { //on completed\n                                    console.log('onUpdatedTransactions.next()');\n                                    this.onUpdatedTransactions$.next(); \n                                }\n                );\n      });   \n    }\n\n  deposit(acct : string, amount:number) : Promise<AtmResponseOperation> {\n\n      let DEPOSIT  = `/deposit/${acct}/amount/${amount}`;\n      \n      return new Promise ( (success,reject)=> {\n          this.http.get<AtmResponseOperation>(this.END_POINT + DEPOSIT).subscribe(\n              resp => { success(resp) },\n              err =>  {  reject(err) },\n              () =>   {    console.log('onUpdatedTransactions.next()');\n                            this.onUpdatedTransactions$.next();\n                      }           \n          );\n      });\n  }\n\n  getLastOperations(acct:string) : Observable<AtmResponseTransactions> {\n\n    let TRANSACTIONS = `/transactions/${acct}`;\n    return this.http.get<AtmResponseTransactions>(this.END_POINT + TRANSACTIONS);\n  }\n\n  logOff() : void {\n        this.accountNumber = '';\n        this.accountName   = '';\n        this.currentBalance = 0;\n        this.token         = undefined;\n        this.accountValid  = undefined;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/atmservice/atmservice.ts"],"sourceRoot":""}